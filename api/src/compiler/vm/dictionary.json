[
  {
    "bytecode": "0000",
    "name": "void",
    "reservedWord": true,
    "description": "null value"
  },
  {
    "bytecode": "0001",
    "name": "local",
    "reservedWord": true,
    "description": "not persist data on blockchain"
  },
  {
    "bytecode": "0002",
    "name": "global",
    "reservedWord": true,
    "description": "persist data on blockchain"
  },
  {
    "bytecode": "0003",
    "name": "private",
    "reservedWord": true,
    "description": "does not allow external access"
  },
  {
    "bytecode": "0004",
    "name": "return",
    "reservedWord": true,
    "description": "reserve word"
  },
  {
    "bytecode": "0005",
    "name": "public",
    "reservedWord": true,
    "description": "allows external access"
  },
  {
    "bytecode": "0006",
    "name": "number",
    "reservedWord": true,
    "description": "reserved word"
  },
  {
    "bytecode": "0007",
    "name": "string",
    "reservedWord": true,
    "description": "reserved word"
  },
  {
    "bytecode": "0008",
    "name": "boolean",
    "reservedWord": true,
    "description": "reserved word"
  },
  {
    "bytecode": "0009",
    "name": "binary",
    "reservedWord": true,
    "description": "reserved word"
  },
  {
    "bytecode": "000a",
    "name": "address",
    "reservedWord": true,
    "description": "reserve word"
  },
  {
    "bytecode": "000b",
    "name": "integer",
    "reservedWord": true,
    "description": "reserved word"
  },
  {
    "bytecode": "000c",
    "name": "array",
    "reservedWord": true,
    "description": "reserve word"
  },
  {
    "bytecode": "000d",
    "name": "map",
    "reservedWord": true,
    "description": "reserve word"
  },
  {
    "bytecode": "000e",
    "name": ";",
    "reservedWord": true,
    "description": "reserve word"
  },
  {
    "bytecode": "000f",
    "name": "*",
    "reservedWord": true,
    "description": "reserve word - pointer"
  },
  {
    "bytecode": "0010",
    "name": "constant",
    "reservedWord": true,
    "description": "reserve word"
  },
  {
    "bytecode": "0011",
    "name": "payable",
    "reservedWord": true,
    "description": "reserve word"
  },
  {
    "bytecode": "0012",
    "name": "notpayable",
    "reservedWord": true,
    "description": "reserve word"
  },
  {
    "bytecode": "0013",
    "name": "input",
    "reservedWord": true,
    "description": "reserve word"
  },
  {
    "bytecode": "0014",
    "name": "nop",
    "description": "command that does nothing"
  },
  {
    "bytecode": "0015",
    "name": "define",
    "description": "create an variable\nExemple: define persistType typeVariable nameVariable initialValue",
    "complements": [
      {
        "word": [
          "local",
          "global"
        ],
        "size": 1
      },
      {
        "word": [
          "number",
          "integer",
          "boolean",
          "binary",
          "string",
          "address",
          "array",
          "map"
        ],
        "size": 1
      },
      {
        "size": 2
      }
    ]
  },
  {
    "bytecode": "0016",
    "name": "function",
    "description": "create an function\nExemple: function privacy nameOfFunction inputA inputB return outputA outputB\nExemple: function privacy nameOfFunction void return void",
    "complements": [
      {
        "word": [
          "public",
          "private"
        ],
        "size": 1
      },
      {
        "word": [
          "payable",
          "notpayable"
        ],
        "size": 1
      },
      {
        "size": 1
      },
      {
        "word": [
          "number",
          "integer",
          "boolean",
          "binary",
          "string",
          "array",
          "map",
          "address"
        ]
      },
      {
        "word": [
          "return"
        ],
        "size": 1
      },
      {
        "word": [
          "number",
          "integer",
          "boolean",
          "binary",
          "string",
          "array",
          "map",
          "address"
        ]
      }
    ]
  },
  {
    "bytecode": "0017",
    "name": "exec",
    "description": "execute an function\nExemple: exec nameOfFunction inputs... return outputs...",
    "complements": [
      {
        "size": 1
      },
      {},
      {
        "word": [
          "return"
        ],
        "size": 1
      },
      {}
    ]
  },
  {
    "bytecode": "0018",
    "name": "return",
    "description": "set an output of function\nExemple: return outputValue",
    "complements": [
      {
        "size": 1
      }
    ]
  },
  {
    "bytecode": "0019",
    "name": "end",
    "description": "define end of function",
    "complements": []
  },
  {
    "bytecode": "001a",
    "name": "mov",
    "description": "copy value to other variable\nExemple: mov recipientVariable valueOrVariable",
    "complements": [
      {
        "size": 2
      }
    ]
  },
  {
    "bytecode": "001b",
    "name": "print",
    "description": "print values on terminal\nExemple: print \"My output value:\" myOutputVariable",
    "complements": [
      {}
    ]
  },
  {
    "bytecode": "001c",
    "name": "cast",
    "description": "cast variable type\nExemple: cast recipientVariable type valueOrVariable",
    "complements": [
      {
        "size": 1
      },
      {
        "word": [
          "number",
          "integer",
          "boolean",
          "binary",
          "string",
          "address"
        ],
        "size": 1
      },
      {
        "size": 1
      }
    ]
  },
  {
    "bytecode": "001d",
    "name": "equ",
    "description": "compare two values\nExemple: equ recipientVariable valueOrVariable1 valueOrVariable2",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "001e",
    "name": "inv",
    "description": "invert boolean\nExemple: inv newBoolean oldBoolean",
    "complements": [
      {
        "size": 2
      }
    ]
  },
  {
    "bytecode": "001f",
    "name": "gt",
    "description": "if valueA > valueB\nExemple: gr recipientBoolean valueA valueB",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0020",
    "name": "gte",
    "description": "if valueA >= valueB\nExemple: gre recipientBoolean valueA valueB",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0021",
    "name": "le",
    "description": "if valueA < valueB\nExemple: le recipientBoolean valueA valueB",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0022",
    "name": "lee",
    "description": "if valueA <= valueB\nExemple: lee recipientBoolean valueA valueB",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0023",
    "name": "and",
    "description": "if valueBooleanA && valueBooleanB\nExemple: and recipientBoolean valueBooleanA valueBooleanB",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0024",
    "name": "or",
    "description": "if valueBooleanA || valueBooleanB\nExemple: or recipientBoolean valueBooleanA valueBooleanB",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0025",
    "name": "add",
    "description": "c = a + b; can be number or stringB\nExemple: add c a b",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0026",
    "name": "sub",
    "description": "c = a - b; only numbers\nExemple: sub c a b",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0027",
    "name": "mul",
    "description": "c = a * b; only numbers\nExemple: mul c a b",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0028",
    "name": "div",
    "description": "c = a / b; only numbers\nExemple: div c a b",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0029",
    "name": "exp",
    "description": "c = a ** b; only numbers\nExemple: exp c a b",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "002a",
    "name": "fixed",
    "description": "Replicates c = a.toFixed(b) method of javascript\nExemple: fixed c a b",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "002b",
    "name": "sqrt",
    "description": "make square root of a; b = Math.sqrt(a) method of javascript\nExemple: sqrt b a",
    "complements": [
      {
        "size": 2
      }
    ]
  },
  {
    "bytecode": "002c",
    "name": "abs",
    "description": "make absolute of a; b = Math.abs(a) method of javascript\nExemple: sqrt b a",
    "complements": [
      {
        "size": 2
      }
    ]
  },
  {
    "bytecode": "002d",
    "name": "checkpoint",
    "description": "define an jump label\nExemple: checkpoint myJumpLabel",
    "complements": [
      {
        "size": 1
      }
    ]
  },
  {
    "bytecode": "002e",
    "name": "jump",
    "description": "go to jump label\nExemple: jump myJumpLabel",
    "complements": [
      {
        "size": 1
      }
    ]
  },
  {
    "bytecode": "002f",
    "name": "jumpif",
    "description": "go to jump label if booleanVariable is true\nExemple: jumpif booleanVariable myJumpLabel",
    "complements": [
      {
        "size": 2
      }
    ]
  },
  {
    "bytecode": "0030",
    "name": "jumpnif",
    "description": "go to jump label if booleanVariable is false\nExemple: jumpnif booleanVariable myJumpLabel",
    "complements": [
      {
        "size": 2
      }
    ]
  },
  {
    "bytecode": "0031",
    "name": "bywise",
    "description": "execute default function on bywise",
    "complements": [
      {
        "size": 1
      },
      {},
      {
        "word": [
          "return"
        ],
        "size": 1
      },
      {}
    ]
  },
  {
    "bytecode": "0032",
    "name": "push",
    "description": "push array\nExemple: push arrayName value index\nExemple: push arrayName value void",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0033",
    "name": "delete",
    "description": "delete array\nExemple: delete arrayName index\nExemple: delete arrayName void",
    "complements": [
      {
        "size": 2
      }
    ]
  },
  {
    "bytecode": "0034",
    "name": "set",
    "description": "set map value\nExemple: set mapName value key",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0035",
    "name": "has",
    "description": "if has value from map\nExemple: push recipientBooleanVar mapName key",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0036",
    "name": "get",
    "description": "get value from array or map\nExemple: get recipientVar arrayOrMapName indexOrKey",
    "complements": [
      {
        "size": 3
      }
    ]
  },
  {
    "bytecode": "0037",
    "name": "size",
    "description": "get size of array or map\nExemple: size recipientVar arrayOrMapName",
    "complements": [
      {
        "size": 2
      }
    ]
  },
  {
    "bytecode": "0038",
    "name": "require",
    "description": "Test some parameter\nExemple: require true \"Did not pass this test\"",
    "complements": [
      {
        "size": 2
      }
    ]
  }
]